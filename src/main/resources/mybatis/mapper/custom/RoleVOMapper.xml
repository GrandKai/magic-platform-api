<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.magic.platform.api.business.role.mapper.custom.dao.RoleVOMapper">
    <resultMap id="BaseResultMap" type="com.magic.platform.api.business.role.mapper.custom.entity.RoleVO">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="plat_id" jdbcType="VARCHAR" property="platId"/>
        <result column="plat_name" jdbcType="VARCHAR" property="platName"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="sort_number" jdbcType="SMALLINT" property="sortNumber"/>
    </resultMap>

    <select id="selectEntityList" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
            t.id,
            t.name,
            t.description,
            t.plat_id,
            p.name as plat_name,
            t.create_time,
            t.update_time,
            t.sort_number
        from role t inner join plat p on t.plat_id = p.id
        where p.is_enabled = '1' and p.is_deleted = '0'
        <if test="name != null and name != ''">
            and concat(ifnull(t.name, ''), ifnull(t.description, '')) like concat('%', #{name}, '%')
        </if>
        <if test="platId != null and platId != ''">
            and t.plat_id = #{platId}
        </if>
        order by p.sort_number asc, p.update_time desc, t.sort_number asc, t.update_time desc
    </select>

    <insert id="insertRoleUserByBatch" parameterType="com.magic.platform.api.business.role.model.RoleUsersModel">

        insert into user_role
        (
            user_id,
            role_id
        )
        values
        <foreach collection="userIds" item="userId" index="index" open="" close="" separator=",">
            (
                #{userId},
                #{roleId}
            )
        </foreach>
    </insert>

    <delete id="deleteRoleUserByBatch" parameterType="com.magic.platform.api.business.role.model.RoleUsersModel">

        delete t from user_role t where t.role_id = #{roleId} and t.user_id in

        <foreach collection="userIds" item="userId" index="index" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </delete>

</mapper>

