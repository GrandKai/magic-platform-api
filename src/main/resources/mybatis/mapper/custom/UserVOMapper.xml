<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.magic.platform.api.business.user.mapper.custom.dao.UserVOMapper">
    <resultMap id="BaseResultMap" type="com.magic.platform.api.business.user.mapper.custom.entity.UserVO">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="VARCHAR" property="userId"/>
        <id column="name" jdbcType="VARCHAR" property="userName"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <!--<result column="password" jdbcType="VARCHAR" property="password"/>-->
        <result column="is_enabled" jdbcType="CHAR" property="isEnabled"/>
        <result column="is_deleted" jdbcType="CHAR" property="isDeleted"/>

        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>

        <collection property="roles" select="selectRoleByUserId" column="{userId=id}"></collection>
    </resultMap>

    <select id="selectEntityList" parameterType="com.magic.platform.api.business.user.model.UserQueryModel" resultMap="BaseResultMap">
        select
        u.id,
        u.name,
        u.nick_name,
        u.is_enabled,
        u.is_deleted,
        u.create_time,
        u.update_time,
        s.id as staffId,
        s.name as staffName,
        s.organization_id,
        o.name as organization_name
        from user u
            inner join staff_info s on s.id = u.staff_id
            left join organization o on o.id = s.organization_id

        <where>
            u.is_deleted = '0'
            <if test="userName != null and userName != ''">
                and locate(#{userName}, concat(ifnull(u.nick_name,''), ifnull(u.name,''), ifnull(s.name,''))) > 0
            </if>
            <if test="isEnabled != null and isEnabled != ''">
                and u.is_enabled = #{isEnabled}
            </if>

             <if test="list != null and list.size > 0">
                 and s.organization_id in
                 <foreach collection="list" separator="," item="item" open="(" close=")">
                     #{item}
                 </foreach>
             </if>


            <if test="startTime != null and startTime != null">
                and u.create_time >= #{startTime}
            </if>

            <if test="endTime != null and endTime != null">
                and u.create_time &lt;= #{endTime}
            </if>
        </where>
        order by u.update_time desc
    </select>

    <insert id="addUserRole" parameterType="java.util.List">
        insert into user_role
        (
            user_id,
            role_id
        )
        values
        <foreach collection="list" item="item" index="index" open="" close="" separator=",">
            (
                #{userId},
                #{item}
            )
        </foreach>

    </insert>



    <select id="selectRoleByUserId" resultType="java.lang.String">
        SELECT
               r.name as roleName
        FROM user_role ur LEFT JOIN role r ON ur.role_id = r.id
        WHERE ur.user_id = #{userId}

        ORDER BY r.sort_number, r.create_time
    </select>
</mapper>

